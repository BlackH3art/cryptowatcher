# src/modules/tokens/token.swagger.yaml
paths:
  /tokens:
    get:
      summary: Get all tokens
      tags:
        - Tokens
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of tokens
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Token'
        '401':
          description: Unauthorized

  /tokens/total:
    get:
      summary: Get total tokens value
      tags:
        - Tokens
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Total tokens value
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: number
        '401':
          description: Unauthorized

  /tokens/{id}:
    get:
      summary: Get token by ID
      tags:
        - Tokens
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Token ID
      responses:
        '200':
          description: Token details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '401':
          description: Unauthorized
        '404':
          description: Token not found

    patch:
      summary: Update token
      tags:
        - Tokens
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Token ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                ticker:
                  type: string
                logo:
                  type: string
                description:
                  type: string
                price:
                  type: number
                amount:
                  type: number
              example:
                name: Bitcoin
                ticker: BTC
                logo: http://example.com/logo.png
                description: Updated description
                price: 50000
                amount: 1.5
      responses:
        '200':
          description: Updated token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '401':
          description: Unauthorized
        '404':
          description: Token not found

  /tokens/favourite/{id}:
    patch:
      summary: Toggle token favourite status
      tags:
        - Tokens
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Token ID
      responses:
        '200':
          description: Updated token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '401':
          description: Unauthorized
        '404':
          description: Token not found

components:
  schemas:
    Token:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier (UUID)
        name:
          type: string
          description: Token name
        ticker:
          type: string
          description: Token ticker
        logo:
          type: string
          description: URL to token logo
        description:
          type: string
          description: Token description
        price:
          type: number
          description: Token price
        favourite:
          type: boolean
          description: Favourite status
        amount:
          type: number
          description: Token amount
        priceUpdatedAt:
          type: string
          format: date-time
          description: Last price update time
        updatedAt:
          type: string
          format: date-time
          description: Last update time
      required:
        - id
        - name
        - ticker
        - logo
        - price
        - favourite
        - amount
        - priceUpdatedAt
        - updatedAt

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT